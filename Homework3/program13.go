/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

//EVEN FIBONACCI NUMBERS
//Problem 2 in project Euler
package main

import "fmt"

func fibonacci(n int) int {
	a := 0
	b := 1
	for i := 0; i < n; i++ {
		temp := a
		a = b
		b = temp + a
	}
	return a
}

func main() {
  var sum int = 0
  var r int
  fmt.Println("enter the range :")
  fmt.Scanf("%d", &r)
	for n := 0; n <= r; n++ {
		result := fibonacci(n)
		if n%2 == 0 {
			fmt.Printf("Fibo of %v is %v\n", n, result)
			sum = sum + result
		}

	}
  fmt.Println("sum of even numbers in the range", sum)
}
